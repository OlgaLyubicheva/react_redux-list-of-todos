{"version":3,"sources":["components/User.js","components/store.js","components/TodoItem.js","components/TodoList.js","components/loadingData.js","App.js","index.js"],"names":["User","_ref","name","react_default","a","createElement","defaultProps","setTodos","value","type","getTodos","state","todos","store","createStore","action","_objectSpread","TodoItem","id","title","completed","user","concat","checked","onChange","todoId","newTodos","Object","toConsumableArray","todo","find","item","updateStatus","htmlFor","components_User","className","onClick","filter","handleDestroy","connect","TodoList","_useState","useState","_useState2","slicedToArray","fieldOfSort","setSortField","_useState3","_useState4","sortStatus","setSortStatus","sortMethod","status","b","localeCompare","setfieldOfSort","event","newfieldOfSort","target","textContent","toLowerCase","undefined","sort","map","components_TodoItem","assign","key","loadData","asyncToGenerator","regenerator_default","mark","_callee","url","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","getTodosWithUsers","_ref2","_callee2","users","todosWithUsers","_context2","loadingData_objectSpread","person","userId","dispatch","isLoadButtonVisible","setButtonVisible","textOfLoadButton","setButtonText","disabled","then","components_TodoList","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.87724d46.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name }) => (\n  <div>\n    {name}\n  </div>\n);\n\nUser.propTypes = {\n  name: PropTypes.string,\n};\n\nUser.defaultProps = {\n  name: null,\n};\n\nexport default User;\n","import { createStore } from 'redux';\n\n// action types\nconst SET_TODOS = 'setTodos';\n\n// action creators\nexport const setTodos = value => ({ type: SET_TODOS, value });\n\n// selectors\nexport const getTodos = state => state.todos;\n\n// reducer\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_TODOS:\n      return { ...state, todos: action.value };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, { todos: [] });\nexport default store;\n","/* eslint-disable no-shadow */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport User from './User';\nimport { getTodos, setTodos } from './store';\n\nconst TodoItem = ({\n  id, title, completed, user, todos, setTodos,\n}) => {\n  const updateStatus = (todoId) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(item => item.id === todoId);\n    todo.completed = !todo.completed;\n\n    setTodos([...newTodos]);\n  };\n\n  const handleDestroy = (todoId) => {\n    const newTodos = todos.filter(todo => todo.id !== todoId);\n\n    setTodos([...newTodos]);\n  };\n\n  return (\n    <tr>\n      <td>\n        <input\n          id={`todo${id}`}\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => updateStatus(id)}\n        />\n      </td>\n\n      <td>\n        <label htmlFor={`todo${id}`}>\n          {title}\n        </label>\n      </td>\n\n      <td>\n        <User {...user} />\n      </td>\n\n      <td>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => handleDestroy(id)}\n        />\n      </td>\n    </tr>\n  );\n};\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n\nTodoItem.defaultProps = {\n  completed: false,\n  user: null,\n};\n\nconst getData = state => ({\n  todos: getTodos(state),\n});\n\nexport default connect(\n  getData,\n  { setTodos },\n)(TodoItem);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos }) => {\n  const [fieldOfSort, setSortField] = useState('user');\n  const [sortStatus, setSortStatus] = useState(1);\n\n  const sortMethod = {\n    status: (a, b) => sortStatus * (a.completed - b.completed),\n    todo: (a, b) => sortStatus * a.title.localeCompare(b.title),\n    user: (a, b) => sortStatus * a.user.name.localeCompare(b.user.name),\n  };\n\n  const setfieldOfSort = (event) => {\n    const newfieldOfSort = event.target.textContent.toLowerCase();\n    if (fieldOfSort === newfieldOfSort) {\n      setSortStatus(-sortStatus);\n    } else {\n      setSortField(newfieldOfSort);\n    }\n  };\n\n  const getSortedTotos = () => ([...todos].sort(sortMethod[fieldOfSort]));\n\n  return (\n    <table className=\"table\">\n      <thead className=\"table-head\">\n        <th\n          onClick={setfieldOfSort}\n          className={fieldOfSort === 'status' ? 'active' : undefined}\n        >\n          Status\n        </th>\n        <th\n          onClick={setfieldOfSort}\n          className={fieldOfSort === 'todo' ? 'active' : undefined}\n        >\n          Todo\n        </th>\n        <th\n          onClick={setfieldOfSort}\n          className={fieldOfSort === 'user' ? 'active' : undefined}\n        >\n          User\n        </th>\n      </thead>\n      <tbody>\n        {\n          getSortedTotos().map(todo => (\n            <TodoItem\n              {...todo}\n              key={todo.id}\n            />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  })).isRequired,\n};\n\nexport default TodoList;\n","export const loadData = async(url) => {\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const getTodosWithUsers = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/';\n\n  const todos = await loadData(`${url}todos`);\n  const users = await loadData(`${url}users`);\n\n  const todosWithUsers = await todos.map(todo => (\n    {\n      ...todo,\n      user: users.find(person => person.id === todo.userId),\n    }\n  ));\n\n  return todosWithUsers;\n};\n","/* eslint-disable no-shadow */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport { getTodosWithUsers } from './components/loadingData';\nimport { getTodos, setTodos } from './components/store';\n\nconst App = ({ todos, setTodos }) => {\n  const [isLoadButtonVisible, setButtonVisible] = useState(true);\n  const [textOfLoadButton, setButtonText] = useState('Load');\n\n  const handleClick = () => {\n    setButtonText('Loading...');\n\n    getTodosWithUsers().then((data) => {\n      setTodos(data);\n      setButtonVisible(false);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Todos</h1>\n      {\n        (isLoadButtonVisible)\n          ? (\n            <button\n              type=\"button\"\n              className=\"load-button\"\n              disabled={textOfLoadButton === 'Loading...'}\n              onClick={handleClick}\n            >\n              {textOfLoadButton}\n            </button>\n          )\n          : (\n            <TodoList\n              todos={todos}\n            />\n          )\n      }\n    </div>\n  );\n};\n\nApp.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  })).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n\nconst getData = state => ({\n  todos: getTodos(state),\n});\n\nconst getMethods = dispatch => ({\n  setTodos: value => dispatch(setTodos(value)),\n});\n\nexport default connect(\n  getData,\n  getMethods,\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './components/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}